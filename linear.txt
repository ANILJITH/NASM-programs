section .data
msg1 db "enter array size",10,0
len1 equ $-msg1
msg2 db "enter elements"
len2 equ $-msg2
msg3 db "enter the key"
len3 equ $-msg3
msg4 db "element found at",10,0
len4 equ $-msg4
msg5 db "element not found",10,0
len5 equ $-msg5
section .bss
no resd 1
no2 resd 1
divide resd 1
dispcount resd 1
noelements resd 1
array resd 50
temp resd 1
element resd 1
section .text
global main
main:
	mov eax,4
	mov ebx,1
	mov ecx,msg1
	mov edx,len1
	int 80h
	call getnumber
	mov eax,[no]
	mov [noelements],eax	
	mov eax,4
	mov ebx,1
	mov ecx,msg2
	mov edx,len2
	int 80h
	mov eax,[noelements]
	mov [temp],eax
getarr:
	cmp dword[temp],0
	je donegetno
	call getnumber
	mov eax,[no]
	push eax
	dec dword[temp]
	jmp getarr
	donegetno:
	mov eax,4
	mov ebx,1
	mov ecx,msg3
	mov edx,len3
	int 80h
	call getnumber
	mov eax,[no]
	mov [element],eax
	mov ebx,[noelements]
	mov [temp],ebx
search:
	pop eax
	mov [no],eax
	cmp [element],eax
	je found
	dec dword[temp]
	cmp dword[temp],0
	jne search 
	jmp notfound
found:
	add dword[temp],30h
	mov eax,4
	mov ebx,1
	mov ecx,msg4
	mov edx,len4
	int 80h
	mov eax,4
	mov ebx,1
	mov ecx,temp
	mov edx,1
	int 80h
	mov dword[no],10
	jmp exit
notfound:
	mov eax,4
	mov ebx,1
	mov ecx,msg5
	mov edx,len5
	int 80h
exit:
	mov eax,1
	mov ebx,0
	int 80h
getnumber:
	mov eax,3
	mov ebx,0
	mov ecx,no
	mov edx,1
	int 80h
	sub dword[no],30h
l1:
	mov eax,3
	mov ebx,0
	mov ecx,no2
	mov edx,1
	int 80h
	cmp dword[no2],10
	je done
	sub dword[no2],30h
	mov eax,dword[no]
	mov ecx,10
	mul ecx
	mov edx,10
	add eax,dword[no2]
	mov dword[no],eax
	jmp l1
done: 
ret






